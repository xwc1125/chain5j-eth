package com.xwc1125.chain5j;

import com.xwc1125.chain5j.abi.datatypes.Utf8String;
import com.xwc1125.chain5j.bip44.HexUtils;
import com.xwc1125.chain5j.rlp.*;
import com.xwc1125.chain5j.utils.StringUtils;

/**
 * @Description:
 * @Author: yijiaren
 * @Date: 2020/10/22 7:15 下午
 * @Copyright Copyright@2020
 */
public class TestRlp {

    public static void main(String[] args) {
        byte[] bytes = RlpEncoder.encode(RlpString.create(140));
        System.out.println(HexUtils.toHex(bytes));

//        String rawTx = "f9024fa001abe09468794f28633ed71fb365d2ef8d60df6fc073c09b82961f2a7b6c0b2185174876e7ff8405f5e1008203189478d9d749f2fccbe580965c365a9af1ff718bd17680b901c43f32b095000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000eca0b8d5409be5311df9fcc4febb643bbcf24f37a747216eb567b6d1a199600cc98ba00dfe58cb3776ae8bee774a7cd72af2be2964a27b441fec665eb86df046f01c10";
        String rawTx = "f907f2a001f102fc3a972489d39cb5572a559f6a7a6f46103037d619ab06dcb1365fc29f8405f5e1008405f5e100821d21943616d9d44865775db2d4a42eee3840c07c70eb6680b907241a391cb4000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000018356264613731613430626431626430303031323061656166000000000000000000000000000000000000000000000000000000000000000000000000000006687b22696e666f5265736f757263654c6966654379636c65223a22e58f91e5b883222c22696e666f5265736f757263654c6f6361746564537973223a22e88b8fe5b79ee5b882e585ace585b1e4bd93e882b2e69c8de58aa1e4ba91e5b9b3e58fb0222c2262617365496e666f5265736f75726365436f6465223a22222c2275706461746544617465223a22312e3537343735452b3132222c227468656d65496e666f5265736f75726365436f6465223a22222c227368617265436f6e646974696f6e223a22e5b882e7baa7e983a8e997a8e997b4222c2264657074496e666f5265736f75726365436f6465223a2233303730313530353030333033303230303030303030303030322f303030303238222c22696e666f4974656d4465736344657461696c223a225b7b5c22696e666f4974656d4e616d655c223a5c22e9809ae8aeafe59cb0e59d805c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e6b3a8e5868ce68980e59ca8e59cb05c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e99a8fe9989fe5b7a5e4bd9ce4babae591985c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e5b7a5e59586e799bbe8aeb0e58fb75c222c5c2264617465547970655c223a5c22e695b0e580bce59e8b4e5c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e5baa7e69cbae58fb7e7a0815c222c5c2264617465547970655c223a5c22e695b0e580bce59e8b4e5c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e794b5e5ad90e982aee7aeb15c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e58d95e4bd8de7b1bbe59e8b5c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e88194e7b3bbe4baba5c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e4bca0e79c9fe58fb7e7a0815c222c5c2264617465547970655c223a5c22e695b0e580bce59e8b4e5c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e58cbbe58aa15c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e6898be69cbae58fb7e7a0815c222c5c2264617465547970655c223a5c22e695b0e580bce59e8b4e5c222c5c226c656e6774685c223a6e756c6c7d2c7b5c22696e666f4974656d4e616d655c223a5c22e58d95e4bd8de5908de7a7b05c222c5c2264617465547970655c223a5c22e5ad97e7aca6e4b8b2e59e8b435c222c5c226c656e6774685c223a6e756c6c7d5d222c22696e666f5265736f7572636550726f7669646572223a22e88b8fe5b79ee5b882e4bd93e882b2e5b180222c227075626c696344617465223a22312e3537343735452b3132222c227265766f6b6544617465223a22222c22736861726554797065223a22e697a0e69da1e4bbb6e585b1e4baab222c22696e666f5265736f757263654e616d65223a22e88b8fe5b79ee5b882e99d92e5b091e998b3e58589e4bd93e882b2e8b59be4ba8be68aa5e5908de58d95e4bd8de6b3a8e5868c222c227265766f6b65526561736f6e223a22222c2273686172654d6f6465223a22e585b1e4baabe5b9b3e58fb0e88eb7e58f96222c22696e666f5265736f75726365466f726d6174223a22e695b0e68daee5ba93222c227570646174654379636c65223a22e5ae9ee697b6222c226964223a22356264613731613430626431626430303031323061656166222c2263726561746544617465223a22312e3534313034452b3132227d000000000000000000000000000000000000000000000000483f80b84008baa3b74a12678f6c8402bc01876b283e4bb8ebd613b7c5d12818d1dcc8e4a49f1a4737f43406a4f8475ad547506894377f955bd21fecc2b99e927895ae9dc7a0f95333e7d8b13bc05b333aa15f0094b14e3ab1e7d60ca0a0bec1041ccb370310a03d694b361641de75377cce4e5562535838c6d0ab045e7ffbc75a021e38e0848f";
        RlpList decode = RlpDecoder.decode(HexUtils.toBytes(rawTx));
        System.out.println(decode);
        for (int i = 0; i < decode.getValues().size(); i++) {
            RlpType rlpType = decode.getValues().get(i);
            RlpList rlpList = (RlpList) rlpType;
            for (int j = 0; j < rlpList.getValues().size(); j++) {
                RlpType rlpType1 = rlpList.getValues().get(j);
                System.out.println(HexUtils.toHex(((RlpString) rlpType1).getBytes()));
            }
        }
    }
}
